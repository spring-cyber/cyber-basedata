<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.cyber.basedata.domain.repository.DictMapper">    <sql id="baseColumns">        id        , parent_id, type,status, name, code, icon, order_num, color, leader, description, deleted, creator, create_time, updator, update_time, remark    </sql>    <sql id="updateColumns">        <set>            <if test="id != null">                id = #{id},            </if>            <if test="parentId != null">                parent_id = #{parentId},            </if>            <if test="type != null">                type = #{type},            </if>            <if test="type != null">                status = #{status},            </if>            <if test="name != null">                name = #{name},            </if>            <if test="code != null">                code = #{code},            </if>            <if test="icon != null">                code = #{icon},            </if>            <if test="orderNum != null">                order_num = #{orderNum},            </if>            <if test="color != null">                color = #{color},            </if>            <if test="leader != null">                leader = #{leader},            </if>            <if test="description != null">                description = #{description},            </if>            <if test="deleted != null">                deleted = #{deleted},            </if>            <if test="creator != null">                creator = #{creator},            </if>            <if test="createTime != null">                create_time = #{createTime},            </if>            <if test="updator != null">                updator = #{updator},            </if>            <if test="updateTime != null">                update_time = #{updateTime},            </if>            <if test="remark != null">                remark = #{remark},            </if>        </set>    </sql>    <sql id="whereClause">        <trim prefix="WHERE" prefixOverrides="AND">            <if test="id != null">                AND ${columnPrefix}id = #{id}            </if>            <if test="parentId != null">                AND ${columnPrefix}parent_id = #{parentId}            </if>            <if test="type != null">                AND ${columnPrefix}type = #{type}            </if>            <if test="status != null">                AND ${columnPrefix}status = #{status}            </if>            <if test="name != null">                AND ${columnPrefix}name = #{name}            </if>            <if test="code != null">                AND ${columnPrefix}code = #{code}            </if>            <if test="icon != null">                AND ${columnPrefix}icon = #{icon}            </if>            <if test="orderNum != null">                AND ${columnPrefix}order_num = #{orderNum}            </if>            <if test="color != null">                AND ${columnPrefix}color = #{color}            </if>            <if test="leader != null">                AND ${columnPrefix}leader = #{leader}            </if>            <if test="description != null">                AND ${columnPrefix}description = #{description}            </if>            <if test="deleted != null">                AND ${columnPrefix}deleted = #{deleted}            </if>            <if test="creator != null">                AND ${columnPrefix}creator = #{creator}            </if>            <if test="createTime != null">                AND ${columnPrefix}create_time = #{createTime}            </if>            <if test="updator != null">                AND ${columnPrefix}updator = #{updator}            </if>            <if test="updateTime != null">                AND ${columnPrefix}update_time = #{updateTime}            </if>            <if test="remark != null">                AND ${columnPrefix}remark = #{remark}            </if>        </trim>    </sql>    <insert id="save" parameterType="com.cyber.domain.entity.Dict">        insert into dict        (<include refid="saveColumn"/>)        values        (<include refid="saveValue"/>)    </insert>    <sql id="saveColumn">        <trim suffixOverrides=",">            <if test="id!= null">id,</if>            <if test="parentId!= null">parent_id,</if>            <if test="type!= null">type,</if>            <if test="status!= null">status,</if>            <if test="name!= null">name,</if>            <if test="code!= null">code,</if>            <if test="icon!= null">icon,</if>            <if test="orderNum!= null">order_num,</if>            <if test="color!= null">color,</if>            <if test="leader!= null">leader,</if>            <if test="description!= null">description,</if>            <if test="deleted!= null">deleted,</if>            <if test="creator!= null">creator,</if>            <if test="createTime!= null">create_time,</if>            <if test="updator!= null">updator,</if>            <if test="updateTime!= null">update_time,</if>            <if test="remark!= null">remark,</if>        </trim>    </sql>    <sql id="saveValue">        <trim suffixOverrides=",">            <if test="id!= null">#{id},</if>            <if test="parentId!= null">#{parentId},</if>            <if test="type!= null">#{type},</if>            <if test="status!= null">#{status},</if>            <if test="name!= null">#{name},</if>            <if test="code!= null">#{code},</if>            <if test="icon!= null">#{icon},</if>            <if test="orderNum!= null">#{orderNum},</if>            <if test="color!= null">#{color},</if>            <if test="leader!= null">#{leader},</if>            <if test="description!= null">#{description},</if>            <if test="deleted!= null">#{deleted},</if>            <if test="creator!= null">#{creator},</if>            <if test="createTime!= null">#{createTime},</if>            <if test="updator!= null">#{updator},</if>            <if test="updateTime!= null">#{updateTime},</if>            <if test="remark!= null">#{remark},</if>        </trim>    </sql>    <delete id="deleteById" parameterType="com.cyber.domain.entity.Dict">        DELETE        FROM dict        WHERE id = #{id}    </delete>    <update id="updateById" parameterType="com.cyber.domain.entity.Dict">        update dict        <include refid="updateColumns"/>        where id = #{id}    </update>    <select id="selectOne" resultType="com.cyber.domain.entity.Dict" parameterType="com.cyber.domain.entity.Dict">        SELECT        <include refid="baseColumns"/>        FROM dict        <include refid="whereClause">            <property name="columnPrefix" value=""/>        </include>    </select>    <select id="selectByIndexCount" parameterType="com.cyber.domain.entity.Dict" resultType="int">        SELECT count(1)        FROM dict        <include refid="whereClause">            <property name="columnPrefix" value=""/>        </include>    </select>    <select id="selectByIndex" parameterType="com.cyber.domain.entity.Dict" resultType="com.cyber.domain.entity.Dict">        SELECT        <include refid="baseColumns"/>        FROM dict        <include refid="whereClause">            <property name="columnPrefix" value=""/>        </include>        <if test="sortBy != null and sortBy != '' and sortType != null and sortType != '' ">            ORDER BY ${sortBy} ${sortType}        </if>        LIMIT #{offset} , #{limit}    </select>    <select id="selectList" resultType="com.cyber.domain.entity.Dict">        SELECT        <include refid="baseColumns"/>        FROM dict        <include refid="whereClause">            <property name="columnPrefix" value=""/>        </include>        <if test="types != null and types.size > 0">            <foreach collection="types" item="type" open="and type in (" close=")" separator=",">                #{type}            </foreach>        </if>    </select>    <select id="checkMenuNameUnique" resultType="com.cyber.domain.entity.Dict">        select id, name        from dict        where name = #{name}          and type = #{type}          and parent_id = #{parentId}          and deleted = 0            limit 1    </select>    <select id="checkMenuCodeUnique" resultType="com.cyber.domain.entity.Dict">        select id, code        from dict        where code = #{code}          and type = #{type}          and parent_id = #{parentId}          and deleted = 0            limit 1    </select>    <select id="hasChildByDictId" resultType="java.lang.Integer">        select count(1) from dict where parent_id = #{dictId}    </select>    <select id="selectDictDataByType" resultType="com.cyber.domain.entity.Dict">        SELECT d.*        FROM dict d                 JOIN dict t0 ON d.parent_id = t0.id                 JOIN dict t1 ON t0.parent_id = t1.id        WHERE t0.type = 1          AND t0.code = #{dictTypeCode}          AND t1.type = 0          AND t1.code = #{dictGroupCode}          AND d.type = 2;    </select>    <select id="selectDictDataList" resultType="com.cyber.domain.entity.Dict">        SELECT d.*,t0.code dictTypeCode, t1.code dictGroupCode        FROM dict d                 JOIN dict t0 ON d.parent_id = t0.id                 JOIN dict t1 ON t0.parent_id = t1.id        <include refid="whereClause">            <property name="columnPrefix" value="d."/>        </include>    </select>    <select id="selectDictByTypeId" resultType="com.cyber.domain.entity.Dict">        SELECT d.code dictTypeCode, t0.code dictGroupCode        FROM dict d                 JOIN dict t0 ON d.parent_id = t0.id        WHERE d.type = #{type} and d.id = #{id}    </select></mapper>